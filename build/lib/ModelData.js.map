{
  "version": 3,
  "sources": ["../../src/lib/ModelData.ts"],
  "sourcesContent": ["export class DataToSend {\n    public constructor(data: Buffer, ipAddress: string) {\n        this.data = data;\n        this.ipAddress = ipAddress;\n    }\n\n    public data: Buffer;\n    public ipAddress: string;\n}\n\nexport enum ParsingStatus {\n    Ok = 1,\n    WrongHeader,\n    WrongVersion,\n    WrongIdSize,\n    ChecksumError,\n    Undefined,\n}\n\nexport class ParsedData {\n    constructor() {\n        this.strFanId = \"\";\n        this.status = ParsingStatus.Undefined;\n        this.receivedData = [];\n    }\n\n    strFanId: string;\n    status: ParsingStatus;\n    receivedData: ReceivedData[];\n}\n\nexport class ReceivedData {\n    constructor(identifer: string = \"\", value: ioBroker.StateValue = null) {\n        this.strIdentifer = identifer;\n        this.value = value;\n    }\n\n    strIdentifer: string;\n    value: ioBroker.StateValue;\n}\n\nexport type FanRemoteEndpoint = { strIpAddress: string; strPassword: string };\n\nexport class WriteDataModel {\n    constructor(strFanId: string, fanData: FanRemoteEndpoint, value: ioBroker.StateValue) {\n        this.strFanId = strFanId;\n        this.fanData = fanData;\n        this.value = value;\n    }\n\n    strFanId: string;\n    fanData: FanRemoteEndpoint;\n    value: ioBroker.StateValue;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,WAAW;AAAA,EACb,YAAY,MAAc,WAAmB;AAChD,SAAK,OAAO;AACZ,SAAK,YAAY;AAAA,EACrB;AAAA,EAEO;AAAA,EACA;AACX;AAEO,IAAK,gBAAL,kBAAKA,mBAAL;AACH,EAAAA,8BAAA,QAAK,KAAL;AACA,EAAAA,8BAAA;AACA,EAAAA,8BAAA;AACA,EAAAA,8BAAA;AACA,EAAAA,8BAAA;AACA,EAAAA,8BAAA;AANQ,SAAAA;AAAA,GAAA;AASL,MAAM,WAAW;AAAA,EACpB,cAAc;AACV,SAAK,WAAW;AAChB,SAAK,SAAS;AACd,SAAK,eAAe,CAAC;AAAA,EACzB;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AACJ;AAEO,MAAM,aAAa;AAAA,EACtB,YAAY,YAAoB,IAAI,QAA6B,MAAM;AACnE,SAAK,eAAe;AACpB,SAAK,QAAQ;AAAA,EACjB;AAAA,EAEA;AAAA,EACA;AACJ;AAIO,MAAM,eAAe;AAAA,EACxB,YAAY,UAAkB,SAA4B,OAA4B;AAClF,SAAK,WAAW;AAChB,SAAK,UAAU;AACf,SAAK,QAAQ;AAAA,EACjB;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AACJ;",
  "names": ["ParsingStatus"]
}
